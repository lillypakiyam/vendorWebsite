{"version":3,"file":"default-src_app_service_firestorage_service_ts.js","mappings":"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","sources":["./src/app/service/firestorage.service.ts","./node_modules/@angular/fire/fesm2015/angular-fire-compat-storage.js","./node_modules/@firebase/storage/dist/index.esm2017.js","./node_modules/firebase/compat/storage/dist/index.esm.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/@firebase/storage-compat/dist/esm/index.esm2017.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireStorage, GetDownloadURLPipeModule} from '@angular/fire/compat/storage';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestorageService {\n\n  \n  FileUpload: {\n    key: string;\n    name: string;\n    url: string;\n    file: File;\n  }\n  public unSubscriber$ = new Subject()\n  constructor(private storage: AngularFireStorage) { }\n\n  public uploadContent(file: any, fileName: any): Promise<any> {\n    // this.storage.ref(`uploads/${fileName}`).delete\n    return new Promise((resolve, reject) => {\n      try {\n        if (file) {\n          return this.storage.upload(`uploads/${fileName}`, file).then(\n            success => {\n              return this.storage.ref(`uploads/${fileName}`).getDownloadURL().pipe(takeUntil(this.unSubscriber$)).subscribe(url => {\n                resolve({ url, fileName });\n              });\n            },\n            failure => {\n              reject(failure);\n            }\n          )\n            .catch(err => {\n              reject(err);\n            });\n        }else {\n          reject(new Error(' choice key not given'));\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  // public download(url:any){\n  //   return new Promise((resolve, reject) => {\n  //   this.storage.refFromURL(url).getDownloadURL().subscribe(down =>{\n  //     console.log(down)\n  //   })\n\n  //   })\n  // }\n}\n","import { Observable, of, from } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { observeOutsideAngular, keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, Pipe, NgModule } from '@angular/core';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/storage';\nimport * as i2 from '@angular/fire/app-check';\nimport { AsyncPipe } from '@angular/common';\nimport * as i2$1 from '@angular/platform-browser';\nimport { makeStateKey } from '@angular/platform-browser';\nimport firebase from 'firebase/compat/app';\n\n// Things aren't working great, I'm having to put in a lot of work-arounds for what\n// appear to be Firebase JS SDK bugs https://github.com/firebase/firebase-js-sdk/issues/4158\nfunction fromTask(task) {\n    return new Observable(subscriber => {\n        const progress = (snap) => subscriber.next(snap);\n        const error = e => subscriber.error(e);\n        const complete = () => subscriber.complete();\n        // emit the current snapshot, so they don't have to wait for state_changes\n        // to fire next... this is stale if the task is no longer running :(\n        progress(task.snapshot);\n        const unsub = task.on('state_changed', progress);\n        // it turns out that neither task snapshot nor 'state_changed' fire the last\n        // snapshot before completion, the one with status 'success\" and 100% progress\n        // so let's use the promise form of the task for that\n        task.then(snapshot => {\n            progress(snapshot);\n            complete();\n        }, e => {\n            // TODO investigate, again this is stale, we never fire a canceled or error it seems\n            progress(task.snapshot);\n            error(e);\n        });\n        // on's type if Function, rather than () => void, need to wrap\n        return function unsubscribe() {\n            unsub();\n        };\n    }).pipe(\n    // deal with sync emissions from first emitting `task.snapshot`, this makes sure\n    // that if the task is already finished we don't emit the old running state\n    debounceTime(0));\n}\n\n/**\n * Create an AngularFireUploadTask from a regular UploadTask from the Storage SDK.\n * This method creates an observable of the upload and returns on object that provides\n * multiple methods for controlling and monitoring the file upload.\n */\nfunction createUploadTask(task) {\n    const inner$ = fromTask(task);\n    return {\n        task,\n        then: task.then.bind(task),\n        catch: task.catch.bind(task),\n        pause: task.pause.bind(task),\n        cancel: task.cancel.bind(task),\n        resume: task.resume.bind(task),\n        snapshotChanges: () => inner$,\n        percentageChanges: () => inner$.pipe(map(s => s.bytesTransferred / s.totalBytes * 100))\n    };\n}\n\n/**\n * Create an AngularFire wrapped Storage Reference. This object\n * creates observable methods from promise based methods.\n */\nfunction createStorageRef(ref) {\n    return {\n        getDownloadURL: () => of(undefined).pipe(observeOutsideAngular, switchMap(() => ref.getDownloadURL()), keepUnstableUntilFirst),\n        getMetadata: () => of(undefined).pipe(observeOutsideAngular, switchMap(() => ref.getMetadata()), keepUnstableUntilFirst),\n        delete: () => from(ref.delete()),\n        child: (path) => createStorageRef(ref.child(path)),\n        updateMetadata: (meta) => from(ref.updateMetadata(meta)),\n        put: (data, metadata) => {\n            const task = ref.put(data, metadata);\n            return createUploadTask(task);\n        },\n        putString: (data, format, metadata) => {\n            const task = ref.putString(data, format, metadata);\n            return createUploadTask(task);\n        },\n        list: (options) => from(ref.list(options)),\n        listAll: () => from(ref.listAll())\n    };\n}\n\nconst BUCKET = new InjectionToken('angularfire2.storageBucket');\nconst MAX_UPLOAD_RETRY_TIME = new InjectionToken('angularfire2.storage.maxUploadRetryTime');\nconst MAX_OPERATION_RETRY_TIME = new InjectionToken('angularfire2.storage.maxOperationRetryTime');\nconst USE_EMULATOR = new InjectionToken('angularfire2.storage.use-emulator');\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\nclass AngularFireStorage {\n    constructor(options, name, storageBucket, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, schedulers, maxUploadRetryTime, maxOperationRetryTime, _useEmulator, _appCheckInstances) {\n        const app = ɵfirebaseAppFactory(options, zone, name);\n        this.storage = ɵcacheInstance(`${app.name}.storage.${storageBucket}`, 'AngularFireStorage', app.name, () => {\n            const storage = zone.runOutsideAngular(() => app.storage(storageBucket || undefined));\n            const useEmulator = _useEmulator;\n            if (useEmulator) {\n                storage.useEmulator(...useEmulator);\n            }\n            if (maxUploadRetryTime) {\n                storage.setMaxUploadRetryTime(maxUploadRetryTime);\n            }\n            if (maxOperationRetryTime) {\n                storage.setMaxOperationRetryTime(maxOperationRetryTime);\n            }\n            return storage;\n        }, [maxUploadRetryTime, maxOperationRetryTime]);\n    }\n    ref(path) {\n        return createStorageRef(this.storage.ref(path));\n    }\n    refFromURL(path) {\n        return createStorageRef(this.storage.refFromURL(path));\n    }\n    upload(path, data, metadata) {\n        const storageRef = this.storage.ref(path);\n        const ref = createStorageRef(storageRef);\n        return ref.put(data, metadata);\n    }\n}\nAngularFireStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorage, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: BUCKET, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: MAX_UPLOAD_RETRY_TIME, optional: true }, { token: MAX_OPERATION_RETRY_TIME, optional: true }, { token: USE_EMULATOR, optional: true }, { token: i2.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularFireStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorage, providedIn: 'any' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorage, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BUCKET]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAX_UPLOAD_RETRY_TIME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAX_OPERATION_RETRY_TIME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/** to be used with in combination with | async */\nclass GetDownloadURLPipe {\n    constructor(storage, cdr, state) {\n        this.storage = storage;\n        this.state = state;\n        this.asyncPipe = new AsyncPipe(cdr);\n    }\n    transform(path) {\n        var _a;\n        if (path !== this.path) {\n            this.path = path;\n            const key = makeStateKey(`|getDownloadURL|${path}`);\n            const existing = (_a = this.state) === null || _a === void 0 ? void 0 : _a.get(key, undefined);\n            this.downloadUrl$ = existing ? of(existing) : this.storage.ref(path).getDownloadURL().pipe(tap(it => { var _a; return (_a = this.state) === null || _a === void 0 ? void 0 : _a.set(key, it); }));\n        }\n        return this.asyncPipe.transform(this.downloadUrl$);\n    }\n    ngOnDestroy() {\n        this.asyncPipe.ngOnDestroy();\n    }\n}\nGetDownloadURLPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipe, deps: [{ token: AngularFireStorage }, { token: i0.ChangeDetectorRef }, { token: i2$1.TransferState, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });\nGetDownloadURLPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipe, name: \"getDownloadURL\", pure: false });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'getDownloadURL',\n                    pure: false,\n                }]\n        }], ctorParameters: function () { return [{ type: AngularFireStorage }, { type: i0.ChangeDetectorRef }, { type: i2$1.TransferState, decorators: [{\n                    type: Optional\n                }] }]; } });\nclass GetDownloadURLPipeModule {\n}\nGetDownloadURLPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGetDownloadURLPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipeModule, declarations: [GetDownloadURLPipe], exports: [GetDownloadURLPipe] });\nGetDownloadURLPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: GetDownloadURLPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [GetDownloadURLPipe],\n                    exports: [GetDownloadURLPipe],\n                }]\n        }] });\n\nclass AngularFireStorageModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'gcs-compat');\n    }\n}\nAngularFireStorageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularFireStorageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorageModule, exports: [GetDownloadURLPipeModule] });\nAngularFireStorageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorageModule, providers: [AngularFireStorage], imports: [GetDownloadURLPipeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireStorageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [GetDownloadURLPipeModule],\n                    providers: [AngularFireStorage]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireStorage, AngularFireStorageModule, BUCKET, GetDownloadURLPipe, GetDownloadURLPipeModule, MAX_OPERATION_RETRY_TIME, MAX_UPLOAD_RETRY_TIME, USE_EMULATOR, createStorageRef, createUploadTask, fromTask };\n","import { getApp, _getProvider, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nclass StorageError extends FirebaseError {\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    constructor(code, message) {\r\n        super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\r\n        /**\r\n         * Stores custom error data unque to StorageError.\r\n         */\r\n        this.customData = { serverResponse: null };\r\n        this._baseMessage = this.message;\r\n        // Without this, `instanceof StorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(this, StorageError.prototype);\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    _codeEquals(code) {\r\n        return prependCode(code) === this.code;\r\n    }\r\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\r\n    get serverResponse() {\r\n        return this.customData.serverResponse;\r\n    }\r\n    set serverResponse(serverResponse) {\r\n        this.customData.serverResponse = serverResponse;\r\n        if (this.customData.serverResponse) {\r\n            this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\r\n        }\r\n        else {\r\n            this.message = this._baseMessage;\r\n        }\r\n    }\r\n}\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    const message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new StorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new StorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new StorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    const message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new StorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new StorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new StorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new StorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new StorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new StorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new StorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new StorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new StorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new StorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new StorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction invalidArgument(message) {\r\n    return new StorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new StorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new StorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new StorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new StorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nclass Location {\r\n    constructor(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    get path() {\r\n        return this.path_;\r\n    }\r\n    get isRoot() {\r\n        return this.path.length === 0;\r\n    }\r\n    fullServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    }\r\n    bucketOnlyServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    }\r\n    static makeFromBucketSpec(bucketString, host) {\r\n        let bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    }\r\n    static makeFromUrl(url, host) {\r\n        let location = null;\r\n        const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        const gsPath = '(/(.*))?$';\r\n        const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        const gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        const version = 'v[A-Za-z0-9_]+';\r\n        const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        const firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\r\n        const firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        const cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        const cloudStoragePath = '([^?#]*)';\r\n        const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\r\n        const cloudStorageIndices = { bucket: 1, path: 2 };\r\n        const groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const group = groups[i];\r\n            const captures = group.regex.exec(url);\r\n            if (captures) {\r\n                const bucketValue = captures[group.indices.bucket];\r\n                let pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    }\r\n}\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nclass FailRequest {\r\n    constructor(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(_appDelete = false) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    let waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let retryTimeoutId = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let globalTimeoutId = null;\r\n    let hitTimeout = false;\r\n    let cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    let triggeredCallback = false;\r\n    function triggerCallback(...args) {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        retryTimeoutId = setTimeout(() => {\r\n            retryTimeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function clearGlobalTimeout() {\r\n        if (globalTimeoutId) {\r\n            clearTimeout(globalTimeoutId);\r\n        }\r\n    }\r\n    function handler(success, ...args) {\r\n        if (triggeredCallback) {\r\n            clearGlobalTimeout();\r\n            return;\r\n        }\r\n        if (success) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        const mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        let waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    let stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        clearGlobalTimeout();\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (retryTimeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(retryTimeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    globalTimeoutId = setTimeout(() => {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host, protocol) {\r\n    let origin = host;\r\n    if (protocol == null) {\r\n        origin = `https://${host}`;\r\n    }\r\n    return `${protocol}://${origin}/v0${urlPart}`;\r\n}\r\nfunction makeQueryString(params) {\r\n    const encode = encodeURIComponent;\r\n    let queryPart = '?';\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            const nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\r\nclass NetworkRequest {\r\n    constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_) {\r\n        this.url_ = url_;\r\n        this.method_ = method_;\r\n        this.headers_ = headers_;\r\n        this.body_ = body_;\r\n        this.successCodes_ = successCodes_;\r\n        this.additionalRetryCodes_ = additionalRetryCodes_;\r\n        this.callback_ = callback_;\r\n        this.errorCallback_ = errorCallback_;\r\n        this.timeout_ = timeout_;\r\n        this.progressCallback_ = progressCallback_;\r\n        this.connectionFactory_ = connectionFactory_;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.promise_ = new Promise((resolve, reject) => {\r\n            this.resolve_ = resolve;\r\n            this.reject_ = reject;\r\n            this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    start_() {\r\n        const doTheRequest = (backoffCallback, canceled) => {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            const connection = this.connectionFactory_();\r\n            this.pendingConnection_ = connection;\r\n            const progressListener = progressEvent => {\r\n                const loaded = progressEvent.loaded;\r\n                const total = progressEvent.lengthComputable\r\n                    ? progressEvent.total\r\n                    : -1;\r\n                if (this.progressCallback_ !== null) {\r\n                    this.progressCallback_(loaded, total);\r\n                }\r\n            };\r\n            if (this.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(this.url_, this.method_, this.body_, this.headers_)\r\n                .then(() => {\r\n                if (this.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                this.pendingConnection_ = null;\r\n                const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                const status = connection.getStatus();\r\n                if (!hitServer || this.isRetryStatusCode_(status)) {\r\n                    const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                const successCode = this.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        };\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        const backoffDone = (requestWentThrough, status) => {\r\n            const resolve = this.resolve_;\r\n            const reject = this.reject_;\r\n            const connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    const result = this.callback_(connection, connection.getResponse());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    const err = unknown();\r\n                    err.serverResponse = connection.getErrorText();\r\n                    if (this.errorCallback_) {\r\n                        reject(this.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        const err = this.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        const err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    }\r\n    isRetryStatusCode_(status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        const isFiveHundredCode = status >= 500 && status < 600;\r\n        const extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        const isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    }\r\n}\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nclass RequestEndStatus {\r\n    constructor(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n}\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion) {\r\n    const queryPart = makeQueryString(requestInfo.urlParams);\r\n    const url = requestInfo.url + queryPart;\r\n    const headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob$1(...args) {\r\n    const BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        const bb = new BlobBuilder();\r\n        for (let i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new StorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nconst StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nclass StringData {\r\n    constructor(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    const b = [];\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        const hi = c;\r\n                        const lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    let decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            const hasMinus = value.indexOf('-') !== -1;\r\n            const hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                const invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            const hasPlus = value.indexOf('+') !== -1;\r\n            const hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                const invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    let bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    const array = new Uint8Array(bytes.length);\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nclass DataURLParts {\r\n    constructor(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        const matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        const middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n}\r\nfunction dataURLBytes_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    const longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nclass FbsBlob {\r\n    constructor(data, elideCopy) {\r\n        let size = 0;\r\n        let blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    size() {\r\n        return this.size_;\r\n    }\r\n    type() {\r\n        return this.type_;\r\n    }\r\n    slice(startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            const realBlob = this.data_;\r\n            const sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    }\r\n    static getBlob(...args) {\r\n        if (isNativeBlobDefined()) {\r\n            const blobby = args.map((val) => {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob$1.apply(null, blobby));\r\n        }\r\n        else {\r\n            const uint8Arrays = args.map((val) => {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            let finalLength = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                finalLength += array.byteLength;\r\n            });\r\n            const merged = new Uint8Array(finalLength);\r\n            let index = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    merged[index++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged, true);\r\n        }\r\n    }\r\n    uploadData() {\r\n        return this.data_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    let obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    const index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    const newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    const canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(component => component.length > 0)\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    const index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nclass Mapping {\r\n    constructor(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n}\r\nlet mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    const mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    const nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    const sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    const metadata = {};\r\n    metadata['type'] = 'file';\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    const tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    const encode = encodeURIComponent;\r\n    const tokensList = tokens.split(',');\r\n    const urls = tokensList.map((token) => {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        const base = makeUrl(urlPart, host, protocol);\r\n        const queryString = makeQueryString({\r\n            alt: 'media',\r\n            token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    const resource = {};\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PREFIXES_KEY = 'prefixes';\r\nconst ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    const listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (const path of resource[PREFIXES_KEY]) {\r\n            const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (const item of resource[ITEMS_KEY]) {\r\n            const reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\r\nclass RequestInfo {\r\n    constructor(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        const listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        let newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getErrorText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    const shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        let newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    const urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    if (maxDownloadSizeBytes !== undefined) {\r\n        requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\r\n        requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\r\n    }\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'PATCH';\r\n    const body = toResourceString(metadata, mappings);\r\n    const headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'DELETE';\r\n    const timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    const metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        let str = '';\r\n        for (let i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    const boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    const metadata_ = metadataForUpload_(location, blob, metadata);\r\n    const metadataString = toResourceString(metadata_, mappings);\r\n    const preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    const postBlobPart = '\\r\\n--' + boundary + '--';\r\n    const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    const urlParams = { name: metadata_['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nclass ResumableUploadStatus {\r\n    constructor(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n}\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    let status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    const allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    const urlParams = { name: metadataForUpload['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    const body = toResourceString(metadataForUpload, mappings);\r\n    const timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        let url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    const headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        const status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        let sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        const size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    const status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    const bytesLeft = status_.total - status_.current;\r\n    let bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    const startByte = status_.current;\r\n    const endByte = startByte + bytesToUpload;\r\n    const uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    const headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': `${status_.current}`\r\n    };\r\n    const body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        const newCurrent = status_.current + bytesToUpload;\r\n        const size = blob.size();\r\n        let metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\r\nconst TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n// type keys = keyof TaskState\r\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\r\nconst TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Observer {\r\n    constructor(nextOrObserver, error, complete) {\r\n        const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error !== null && error !== void 0 ? error : undefined;\r\n            this.complete = complete !== null && complete !== void 0 ? complete : undefined;\r\n        }\r\n        else {\r\n            const observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return (...argsToForward) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(() => f(...argsToForward));\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An override for the text-based Connection. Used in tests. */\r\nlet textFactoryOverride = null;\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nclass XhrConnection {\r\n    constructor() {\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.initXhr();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(resolve => {\r\n            this.xhr_.addEventListener('abort', () => {\r\n                this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('error', () => {\r\n                this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('load', () => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    send(url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (const key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    }\r\n    getErrorCode() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    }\r\n    getStatus() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    }\r\n    getResponse() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponse() before sending');\r\n        }\r\n        return this.xhr_.response;\r\n    }\r\n    getErrorText() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorText() before sending');\r\n        }\r\n        return this.xhr_.statusText;\r\n    }\r\n    /** Aborts the request. */\r\n    abort() {\r\n        this.xhr_.abort();\r\n    }\r\n    getResponseHeader(header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    }\r\n    addUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    }\r\n    removeUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    }\r\n}\r\nclass XhrTextConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'text';\r\n    }\r\n}\r\nfunction newTextConnection() {\r\n    return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\r\n}\r\nclass XhrBytesConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'arraybuffer';\r\n    }\r\n}\r\nfunction newBytesConnection() {\r\n    return new XhrBytesConnection();\r\n}\r\nclass XhrBlobConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'blob';\r\n    }\r\n}\r\nfunction newBlobConnection() {\r\n    return new XhrBlobConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nclass UploadTask {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    constructor(ref, blob, metadata = null) {\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = error => {\r\n            this._request = undefined;\r\n            this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this._needToFetchStatus = true;\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = error => {\r\n            this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n            this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, () => { });\r\n    }\r\n    _makeProgressCallback() {\r\n        const sizeBefore = this._transferred;\r\n        return loaded => this._updateProgress(sizeBefore + loaded);\r\n    }\r\n    _shouldDoResumable(blob) {\r\n        return blob.size() > 256 * 1024;\r\n    }\r\n    _start() {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    }\r\n    _resolveToken(callback) {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            switch (this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    // TODO(andysoto): assert false\r\n    _createResumable() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = createRequest;\r\n            createRequest.getPromise().then((url) => {\r\n                this._request = undefined;\r\n                this._uploadUrl = url;\r\n                this._needToFetchStatus = false;\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _fetchStatus() {\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\r\n            const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = statusRequest;\r\n            statusRequest.getPromise().then(status => {\r\n                status = status;\r\n                this._request = undefined;\r\n                this._updateProgress(status.current);\r\n                this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    this._needToFetchMetadata = true;\r\n                }\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _continueUpload() {\r\n        const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        const status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            let requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                this._error = e;\r\n                this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = uploadRequest;\r\n            uploadRequest.getPromise().then((newStatus) => {\r\n                this._increaseMultiplier();\r\n                this._request = undefined;\r\n                this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    this._metadata = newStatus.metadata;\r\n                    this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    this.completeTransitions_();\r\n                }\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _increaseMultiplier() {\r\n        const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    }\r\n    _fetchMetadata() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\r\n            const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._metadataErrorHandler);\r\n        });\r\n    }\r\n    _oneShotUpload() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._updateProgress(this._blob.size());\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _updateProgress(transferred) {\r\n        const old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    }\r\n    _transition(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                const wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    }\r\n    completeTransitions_() {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * A snapshot of the current task state.\r\n     */\r\n    get snapshot() {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        return {\r\n            bytesTransferred: this._transferred,\r\n            totalBytes: this._blob.size(),\r\n            state: externalState,\r\n            metadata: this._metadata,\r\n            task: this,\r\n            ref: this._ref\r\n        };\r\n    }\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    on(type, nextOrObserver, error, completed) {\r\n        const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\r\n        this._addObserver(observer);\r\n        return () => {\r\n            this._removeObserver(observer);\r\n        };\r\n    }\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    then(onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    }\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    catch(onRejected) {\r\n        return this.then(null, onRejected);\r\n    }\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    _addObserver(observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    }\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    _removeObserver(observer) {\r\n        const i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    }\r\n    _notifyObservers() {\r\n        this._finishPromise();\r\n        const observers = this._observers.slice();\r\n        observers.forEach(observer => {\r\n            this._notifyObserver(observer);\r\n        });\r\n    }\r\n    _finishPromise() {\r\n        if (this._resolve !== undefined) {\r\n            let triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    const toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    }\r\n    _notifyObserver(observer) {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    resume() {\r\n        const valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    pause() {\r\n        const valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    cancel() {\r\n        const valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nclass Reference {\r\n    constructor(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    toString() {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    }\r\n    _newRef(service, location) {\r\n        return new Reference(service, location);\r\n    }\r\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\r\n    get root() {\r\n        const location = new Location(this._location.bucket, '');\r\n        return this._newRef(this._service, location);\r\n    }\r\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\r\n    get bucket() {\r\n        return this._location.bucket;\r\n    }\r\n    /**\r\n     * The full path of this object.\r\n     */\r\n    get fullPath() {\r\n        return this._location.path;\r\n    }\r\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\r\n    get name() {\r\n        return lastComponent(this._location.path);\r\n    }\r\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\r\n    get storage() {\r\n        return this._service;\r\n    }\r\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\r\n    get parent() {\r\n        const newPath = parent(this._location.path);\r\n        if (newPath === null) {\r\n            return null;\r\n        }\r\n        const location = new Location(this._location.bucket, newPath);\r\n        return new Reference(this._service, location);\r\n    }\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    _throwIfRoot(name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\r\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBytes');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBytesConnection)\r\n        .then(bytes => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            bytes.slice(0, maxDownloadSizeBytes)\r\n        : bytes);\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\r\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBlob');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBlobConnection)\r\n        .then(blob => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            blob.slice(0, maxDownloadSizeBytes)\r\n        : blob);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytes');\r\n    const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(finalMetadata => {\r\n        return {\r\n            metadata: finalMetadata,\r\n            ref\r\n        };\r\n    });\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\r\n    ref._throwIfRoot('uploadString');\r\n    const data = dataFromString(format, value);\r\n    const metadataClone = Object.assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return uploadBytes$1(ref, data.data, metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    const accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(() => accumulator);\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nasync function listAllHelper(ref, accumulator, pageToken) {\r\n    const opt = {\r\n        // maxResults is 1000 by default.\r\n        pageToken\r\n    };\r\n    const nextPage = await list$1(ref, opt);\r\n    accumulator.prefixes.push(...nextPage.prefixes);\r\n    accumulator.items.push(...nextPage.items);\r\n    if (nextPage.nextPageToken != null) {\r\n        await listAllHelper(ref, accumulator, nextPage.nextPageToken);\r\n    }\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    if (options != null) {\r\n        if (typeof options.maxResults === 'number') {\r\n            validateNumber('options.maxResults', \r\n            /* minValue= */ 1, \r\n            /* maxValue= */ 1000, options.maxResults);\r\n        }\r\n    }\r\n    const op = options || {};\r\n    const requestInfo = list$2(ref.storage, ref._location, \r\n    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    ref._throwIfRoot('getMetadata');\r\n    const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    ref._throwIfRoot('updateMetadata');\r\n    const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref._throwIfRoot('getDownloadURL');\r\n    const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(url => {\r\n        if (url === null) {\r\n            throw noDownloadURL();\r\n        }\r\n        return url;\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    ref._throwIfRoot('deleteObject');\r\n    const requestInfo = deleteObject$2(ref.storage, ref._location);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    const newPath = child(ref._location.path, childPath);\r\n    const location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        const service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        const reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\r\n    storage.host = `${host}:${port}`;\r\n    storage._protocol = 'http';\r\n    const { mockUserToken } = options;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\r\nclass FirebaseStorageImpl {\r\n    constructor(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._protocol = 'https';\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(host) {\r\n        this._host = host;\r\n        if (this._url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\r\n    get maxUploadRetryTime() {\r\n        return this._maxUploadRetryTime;\r\n    }\r\n    set maxUploadRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxUploadRetryTime = time;\r\n    }\r\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\r\n    get maxOperationRetryTime() {\r\n        return this._maxOperationRetryTime;\r\n    }\r\n    set maxOperationRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxOperationRetryTime = time;\r\n    }\r\n    async _getAuthToken() {\r\n        if (this._overrideAuthToken) {\r\n            return this._overrideAuthToken;\r\n        }\r\n        const auth = this._authProvider.getImmediate({ optional: true });\r\n        if (auth) {\r\n            const tokenData = await auth.getToken();\r\n            if (tokenData !== null) {\r\n                return tokenData.accessToken;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async _getAppCheckToken() {\r\n        const appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n        if (appCheck) {\r\n            const result = await appCheck.getToken();\r\n            // TODO: What do we want to do if there is an error getting the token?\r\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    _delete() {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(request => request.cancel());\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    _makeStorageReference(loc) {\r\n        return new Reference(this, loc);\r\n    }\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    _makeRequest(requestInfo, requestFactory, authToken, appCheckToken) {\r\n        if (!this._deleted) {\r\n            const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion);\r\n            this._requests.add(request);\r\n            // Request removes itself from set when complete.\r\n            request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    }\r\n    async makeRequestWithTokens(requestInfo, requestFactory) {\r\n        const [authToken, appCheckToken] = await Promise.all([\r\n            this._getAuthToken(),\r\n            this._getAppCheckToken()\r\n        ]);\r\n        return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\r\n    }\r\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.9.9\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\r\nfunction getBytes(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBytesInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytes$1(ref, data, metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadString$1(ref, value, format, metadata);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\r\nfunction getStorage(app = getApp(), bucketUrl) {\r\n    app = getModularInstance(app);\r\n    const storageProvider = _getProvider(app, STORAGE_TYPE);\r\n    const storageInstance = storageProvider.getImmediate({\r\n        identifier: bucketUrl\r\n    });\r\n    return storageInstance;\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options = {}) {\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\r\nfunction getBlob(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBlobInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\r\nfunction getStream(ref, maxDownloadSizeBytes) {\r\n    throw new Error('getStream() is only supported by NodeJS builds');\r\n}\n\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    const app = container.getProvider('app').getImmediate();\r\n    const authProvider = container.getProvider('auth-internal');\r\n    const appCheckProvider = container.getProvider('app-check-internal');\r\n    return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\r\n}\r\nfunction registerStorage() {\r\n    _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\r\n    registerVersion(name, version, '');\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\r\nregisterStorage();\n\nexport { StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };\n","import '@firebase/storage-compat';\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import firebase from '@firebase/app-compat';\nimport { _getChild, uploadBytesResumable, StringFormat, _dataFromString, _UploadTask, _FbsBlob, listAll, list, getMetadata, updateMetadata, getDownloadURL, deleteObject, _invalidRootOperation, _invalidArgument, ref, _Location, connectStorageEmulator, _TaskState, _TaskEvent } from '@firebase/storage';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UploadTaskSnapshotCompat {\r\n    constructor(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    get bytesTransferred() {\r\n        return this._delegate.bytesTransferred;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get state() {\r\n        return this._delegate.state;\r\n    }\r\n    get totalBytes() {\r\n        return this._delegate.totalBytes;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UploadTaskCompat {\r\n    constructor(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    get snapshot() {\r\n        return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n    }\r\n    then(onFulfilled, onRejected) {\r\n        return this._delegate.then(snapshot => {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, this, this._ref));\r\n            }\r\n        }, onRejected);\r\n    }\r\n    on(type, nextOrObserver, error, completed) {\r\n        let wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = (taskSnapshot) => nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref));\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? (taskSnapshot) => nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref))\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    }\r\n}\n\nclass ListResultCompat {\r\n    constructor(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    get prefixes() {\r\n        return this._delegate.prefixes.map(ref => new ReferenceCompat(ref, this._service));\r\n    }\r\n    get items() {\r\n        return this._delegate.items.map(ref => new ReferenceCompat(ref, this._service));\r\n    }\r\n    get nextPageToken() {\r\n        return this._delegate.nextPageToken || null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ReferenceCompat {\r\n    constructor(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get bucket() {\r\n        return this._delegate.bucket;\r\n    }\r\n    get fullPath() {\r\n        return this._delegate.fullPath;\r\n    }\r\n    toString() {\r\n        return this._delegate.toString();\r\n    }\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    child(childPath) {\r\n        const reference = _getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    }\r\n    get root() {\r\n        return new ReferenceCompat(this._delegate.root, this.storage);\r\n    }\r\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\r\n    get parent() {\r\n        const reference = this._delegate.parent;\r\n        if (reference == null) {\r\n            return null;\r\n        }\r\n        return new ReferenceCompat(reference, this.storage);\r\n    }\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    put(data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    }\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    putString(value, format = StringFormat.RAW, metadata) {\r\n        this._throwIfRoot('putString');\r\n        const data = _dataFromString(format, value);\r\n        const metadataClone = Object.assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new _UploadTask(this._delegate, new _FbsBlob(data.data, true), metadataClone), this);\r\n    }\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    listAll() {\r\n        return listAll(this._delegate).then(r => new ListResultCompat(r, this.storage));\r\n    }\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    list(options) {\r\n        return list(this._delegate, options || undefined).then(r => new ListResultCompat(r, this.storage));\r\n    }\r\n    /**\r\n     * A `Promise` that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    getMetadata() {\r\n        return getMetadata(this._delegate);\r\n    }\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A `Promise` that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    updateMetadata(metadata) {\r\n        return updateMetadata(this._delegate, metadata);\r\n    }\r\n    /**\r\n     * @returns A `Promise` that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    getDownloadURL() {\r\n        return getDownloadURL(this._delegate);\r\n    }\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A `Promise` that resolves if the deletion succeeds.\r\n     */\r\n    delete() {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject(this._delegate);\r\n    }\r\n    _throwIfRoot(name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw _invalidRootOperation(name);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nclass StorageServiceCompat {\r\n    constructor(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    get maxOperationRetryTime() {\r\n        return this._delegate.maxOperationRetryTime;\r\n    }\r\n    get maxUploadRetryTime() {\r\n        return this._delegate.maxUploadRetryTime;\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    ref(path) {\r\n        if (isUrl(path)) {\r\n            throw _invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    refFromURL(url) {\r\n        if (!isUrl(url)) {\r\n            throw _invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            _Location.makeFromUrl(url, this._delegate.host);\r\n        }\r\n        catch (e) {\r\n            throw _invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    }\r\n    setMaxUploadRetryTime(time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    }\r\n    setMaxOperationRetryTime(time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    }\r\n    useEmulator(host, port, options = {}) {\r\n        connectStorageEmulator(this._delegate, host, port, options);\r\n    }\r\n}\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\n\nconst name = \"@firebase/storage-compat\";\nconst version = \"0.1.17\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage-compat';\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    // Dependencies\r\n    const app = container.getProvider('app-compat').getImmediate();\r\n    const storageExp = container\r\n        .getProvider('storage')\r\n        .getImmediate({ identifier: url });\r\n    const storageServiceCompat = new StorageServiceCompat(app, storageExp);\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    const namespaceExports = {\r\n        // no-inline\r\n        TaskState: _TaskState,\r\n        TaskEvent: _TaskEvent,\r\n        StringFormat,\r\n        Storage: StorageServiceCompat,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"],"names":["Observable","of","from","debounceTime","map","switchMap","tap","i1","observeOutsideAngular","keepUnstableUntilFirst","VERSION","i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","Pipe","NgModule","ɵfirebaseAppFactory","ɵcacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","AsyncPipe","i2$1","makeStateKey","firebase","fromTask","task","subscriber","progress","snap","next","error","e","complete","snapshot","unsub","on","then","unsubscribe","pipe","createUploadTask","inner$","bind","catch","pause","cancel","resume","snapshotChanges","percentageChanges","s","bytesTransferred","totalBytes","createStorageRef","ref","getDownloadURL","undefined","getMetadata","delete","child","path","updateMetadata","meta","put","data","metadata","putString","format","list","options","listAll","BUCKET","MAX_UPLOAD_RETRY_TIME","MAX_OPERATION_RETRY_TIME","USE_EMULATOR","AngularFireStorage","constructor","name","storageBucket","platformId","zone","schedulers","maxUploadRetryTime","maxOperationRetryTime","_useEmulator","_appCheckInstances","app","storage","runOutsideAngular","useEmulator","setMaxUploadRetryTime","setMaxOperationRetryTime","refFromURL","upload","storageRef","ɵfac","NgZone","ɵAngularFireSchedulers","AppCheckInstances","ɵprov","type","args","providedIn","decorators","Object","GetDownloadURLPipe","cdr","state","asyncPipe","transform","_a","key","existing","get","downloadUrl$","it","set","ngOnDestroy","ChangeDetectorRef","TransferState","ɵpipe","pure","GetDownloadURLPipeModule","ɵmod","ɵinj","declarations","exports","AngularFireStorageModule","registerVersion","full","providers","getApp","_getProvider","_registerComponent","SDK_VERSION","FirebaseError","createMockUserToken","getModularInstance","Component","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","StorageError","code","message","prependCode","customData","serverResponse","_baseMessage","setPrototypeOf","prototype","_codeEquals","unknown","objectNotFound","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","internalError","Location","path_","isRoot","length","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","host","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","decodeURIComponent","version","firebaseStorageHost","replace","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","i","group","captures","exec","bucketValue","pathValue","FailRequest","promise_","Promise","reject","getPromise","_appDelete","start","f","callback","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","apply","callWithDelay","millis","setTimeout","handler","clearGlobalTimeout","clearTimeout","success","call","mustStop","waitMillis","Math","random","stopped","stop","wasTimeout","id","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","value","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","hasOwnProperty","nextPart","ErrorCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve","resolve_","reject_","start_","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","status","getStatus","isRetryStatusCode_","wasCanceled","ABORT","successCode","indexOf","backoffDone","requestWentThrough","wasSuccessCode","result","getResponse","err","getErrorText","appDelete","abort","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","headers","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","requestFactory","urlParams","assign","method","body","successCodes","additionalRetryCodes","errorHandler","progressCallback","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","bb","append","getBlob","sliceBlob","blob","end","webkitSlice","mozSlice","decodeBase64","encoded","atob","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","bytes","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","longEnough","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","val","uint8Arrays","finalLength","forEach","merged","index","uploadData","jsonObjectOrNull","obj","JSON","parse","parent","lastIndexOf","newPath","childPath","canonicalChildPath","split","filter","component","join","lastComponent","noXform_","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","defineProperty","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","_protocol","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata$2","list$2","delimiter","pageToken","maxResults","getBytes$1","maxDownloadSizeBytes","_","getDownloadUrl","updateMetadata$2","deleteObject$2","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","toString","boundary","metadata_","metadataString","preBlobPart","postBlobPart","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","getResponseHeader","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","Observer","nextOrObserver","asFunctions","observer","async","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","header","listener","removeEventListener","XhrTextConnection","responseType","newTextConnection","XhrBytesConnection","newBytesConnection","XhrBlobConnection","newBlobConnection","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","observers","triggered","toCall","Reference","_service","_newRef","root","_throwIfRoot","getBytesInternal","makeRequestWithTokens","getBlobInternal","uploadBytes$1","finalMetadata","uploadBytesResumable$1","uploadString$1","listAll$1","accumulator","listAllHelper","opt","nextPage","list$1","op","getMetadata$1","updateMetadata$1","getDownloadURL$1","deleteObject$1","_getChild$1","isUrl","test","refFromPath","FirebaseStorageImpl","_bucket","ref$1","serviceOrRef","pathOrUrl","extractBucket","config","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","projectId","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","getImmediate","optional","tokenData","getToken","accessToken","appCheck","_delete","request","clear","add","STORAGE_TYPE","getBytes","uploadBytes","uploadString","uploadBytesResumable","deleteObject","_getChild","getStorage","bucketUrl","storageProvider","storageInstance","identifier","connectStorageEmulator","getStream","Error","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","registerStorage","setMultipleInstances","_FbsBlob","_Location","_TaskEvent","_TaskState","_UploadTask","_dataFromString","_invalidArgument","_invalidRootOperation","Subscriber","dueTime","scheduler","source","lift","DebounceTimeOperator","subscribe","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","_next","clearDebounce","schedule","dispatchNext","_complete","debouncedNext","remove","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","r","StorageServiceCompat","storageExp","storageServiceCompat","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4,5]}